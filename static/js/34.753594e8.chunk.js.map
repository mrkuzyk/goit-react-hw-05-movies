{"version":3,"file":"static/js/34.753594e8.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/OneMovieDetails/OneMovieDetails.module.css?6254","pages/OneMovieDetails/OneMovieDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieDetails\":\"OneMovieDetails_movieDetails__lwLlB\",\"flex\":\"OneMovieDetails_flex__QhAU5\",\"img\":\"OneMovieDetails_img__lsLl1\",\"name\":\"OneMovieDetails_name__Ibq48\",\"score\":\"OneMovieDetails_score__UfZrR\",\"title\":\"OneMovieDetails_title__GR7Ju\",\"titleText\":\"OneMovieDetails_titleText__ovm52\",\"additionalInformation\":\"OneMovieDetails_additionalInformation__ynA2o\",\"infoBtn\":\"OneMovieDetails_infoBtn__Nb3EM\",\"info\":\"OneMovieDetails_info__RKv5R\",\"active\":\"OneMovieDetails_active__Qkneo\"};","import { useParams, NavLink, Outlet, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from \"react\";\nimport Loader from 'components/Loader/Loader';\nimport ButtonBack from 'components/ButtonBack/ButtonBack';\nimport s from './OneMovieDetails.module.css';\n\nconst OneMovieDetails = () => {\n    const [movie, setMovies] = useState([]);\n    const [error, setError] = useState(null);\n    const [firstLoad, setFirstLoad] = useState(true);\n    const [loader, setLoader] = useState(false);\n    const [prevPage, setPrevPage] = useState(null);\n    const [movieName, setMovieName] = useState('React App');\n    const location = useLocation();\n    const { id } = useParams();\n\n    \n    // console.dir(titlePage.textContent);\n\n    useEffect(() => {\n        const titlePage = document.getElementById('title');\n        titlePage.textContent = movieName;\n\n        return () => {\n            titlePage.textContent = 'React App';\n        }\n    },[movieName])\n\n    useEffect(() => {\n        setPrevPage(location.state?.from)\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        setLoader(true); // включаю лоадер\n\n        fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=6498bc448a014b6e9c7e74504ab1fe83&language=en-US`)\n            .then(response => {\n                if (!response.ok) {\n                    throw Error(response.statusText);\n                };\n\n                return response.json();\n            })\n            .then(movie => {\n                // console.log(movie);\n                setMovies(movie)\n                setFirstLoad(false)\n                setMovieName(movie.title)\n                setLoader(false); // виключаю лоадер після загрузки\n            })\n            .catch(error => {\n                setError(error)\n                setLoader(false); // виключаю лоадер \n            })\n    }, [id]);\n\n    const { poster_path, title, original_title, release_date, vote_average, overview, genres } = movie;\n    \n    return (\n        <section className={s.movieDetails}>\n            <div className=\"container\">\n                <ButtonBack to={prevPage ?? \"/movies\"} classStyle={1} />\n                {loader && <Loader />}\n                {movie && !error && !firstLoad &&\n                    <>\n                        <div className={s.flex}>\n                            <img\n                                src={poster_path && `https://image.tmdb.org/t/p/w400${poster_path}`}\n                                alt={title}\n                                className={s.img}\n                            />\n                            <div>\n                                <h2 className={s.name}>{original_title} ({Number.parseInt(release_date)})</h2>\n                                <p className={s.score}>User Score: {vote_average * 10}%</p>\n                                <h3 className={s.title}>Overview</h3>\n                                <p className={s.titleText}>{overview}</p>\n                                <h3 className={s.title}>Genres</h3>\n                                {genres && <p className={s.titleText}>{genres.map((g) => g.name).join(' | ')}</p>}\n                            </div>\n                        </div>\n                    \n                        <h3 className={s.additionalInformation}>Additional information</h3>\n                        <div className={s.infoBtn}>\n                            <NavLink\n                                to='cast'\n                                state={{ from: prevPage }}\n                                replace={true}\n                                className={({ isActive }) => isActive ? `${s.active} ${s.info}` : s.info}\n                            >\n                                Cast\n                            </NavLink>\n                            <NavLink\n                                to='reviews'\n                                state={{ from: prevPage }}\n                                replace={true}\n                                className={({ isActive }) => isActive ? `${s.active} ${s.info}` : s.info}\n                            >\n                                Reviews\n                            </NavLink>\n                        </div>\n                        <Outlet />\n                    </>\n                }\n            </div>\n        </section>\n    );\n};\n\nexport default OneMovieDetails;"],"names":["useState","movie","setMovies","error","setError","firstLoad","setFirstLoad","loader","setLoader","prevPage","setPrevPage","movieName","setMovieName","location","useLocation","id","useParams","useEffect","titlePage","document","getElementById","textContent","state","from","fetch","then","response","ok","Error","statusText","json","title","catch","poster_path","original_title","release_date","vote_average","overview","genres","className","s","ButtonBack","to","classStyle","Loader","src","alt","Number","parseInt","map","g","name","join","replace","isActive"],"sourceRoot":""}